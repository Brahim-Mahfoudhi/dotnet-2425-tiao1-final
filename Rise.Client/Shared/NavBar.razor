@inject Microsoft.Extensions.Localization.IStringLocalizer<NavBar> Localizer
@inject NavigationManager NavigationManager
@using Rise.Shared.Enums
@using Microsoft.JSInterop
@inject IJSRuntime js


<nav class="navbar navbar-expand-lg navbar-transparent position-fixed w-100 top-0 z-index-3 shadow-none start-0 end-0"
  id="navbar">
  <div class="container pt-1">
    <a class="navbar-brand font-weight-bold" href="/">
      <div class="bg-white z-index-3 p-1 logo-img rounded-circle ">
        <img src="img/BUUT_logo.png" alt="Logo" class="logo" />
      </div>
    </a>
    
        @if (!showIcons)
        {
          <NavBarIcons></NavBarIcons>
          <button id="hamburger" @onclick="ToggleHamburger" class="navbar-toggler shadow-none ms-2" type="button" data-bs-toggle="collapse" data-bs-target="#navigation"
                  aria-controls="navigation" aria-expanded="@isHamburgerOpen.ToString().ToLower()" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon mt-2">
              <span class="navbar-toggler-bar bar1"></span>
              <span class="navbar-toggler-bar bar2"></span>
              <span class="navbar-toggler-bar bar3"></span>
            </span>
          </button>
        }

    <div class="collapse navbar-collapse w-100 pt-3 pb-2 py-lg-0 navbar-transparent shadow-sm " id="navigation">
      <ul class="navbar-nav navbar-nav-hover d-flex mr-auto align-items-start">
        <li class="nav-item dropdown dropdown-hover mx-2">
          <a href="/" class="nav-link ps-2 d-flex justify-content-between cursor-pointer align-items-end" role="button"
             aria-expanded="false">
            <h6 class="text-white">@Localizer["Home"]</h6>
          </a>
        </li>




        <AuthorizeView Roles="Admin">


          <li class="nav-item dropdown dropdown-hover mx-2">
            <a class="nav-link ps-2 d-flex justify-content-between cursor-pointer align-items-center"
               data-bs-toggle="dropdown" aria-expanded="false" role="button">
              <h6 class="text-white mb-0">@Localizer["Management"]</h6>
              <img src="img/down-arrow-white.svg" alt="down-arrow" class="arrow ms-1">
            </a>
            <div class="dropdown-menu dropdown-menu-animation dropdown-lg mt-0 mt-lg-3 p-1 border-radius-lg">
              <div class="d-none d-md-block">
                <ul class="list-group">
                  @foreach (var link in NavigationService.GetNavigationLinks().Where(link => link.Authenticated))
                  {
                    @if (link.Role == RolesEnum.Admin)
                    {
                      <li class="nav-item list-group-item border-0 p-0">
                        <a class="dropdown-item py-2 ps-3 border-radius-md" href="@link.Url">
                          <div class="d-flex align-items-center">
                            <div class="icon me-3 d-flex align-items-center">
                              <i class="ni ni-bold-right"></i>
                            </div>
                            <div>
                              <h6 class="dropdown-header text-dark font-weight-bold m-0">@Localizer[@link.Name]</h6>
                            </div>
                          </div>
                        </a>
                      </li>
                    }
                  }
                </ul>
              </div>
              <div class="row d-lg-none">
                <div class="col-md-12 g-0">

                  @foreach (var link in NavigationService.GetNavigationLinks().Where(link => link.Authenticated))
                  {
                    @if (link.Role == RolesEnum.Admin)
                    {
                        <a class="dropdown-item py-2 ps-3 border-radius-md" href="@link.Url">
                          <div class="d-flex align-items-center">
                            <div class="icon me-3 d-flex align-items-center">
                              <i class="ni ni-bold-right"></i>
                            </div>
                            <div>
                              <h6 class="dropdown-header text-white font-weight-bold m-0">@Localizer[@link.Name]</h6>
                            </div>
                          </div>
                        </a>
                    }
                  }
                </div>
              </div>
            </div>
          </li>

        </AuthorizeView>
        
        
        @foreach (var link in NavigationService.GetNavigationLinks().Where(link => link.Authenticated))
        {
 
          @if (link.Role == RolesEnum.User)
          {
            <AuthorizeView Roles="User, Admin">
              <li class="nav-item dropdown dropdown-hover mx-2">
                <a href="@link.Url" class="nav-link ps-2 d-flex justify-content-between cursor-pointer align-items-end"
                   role="button" aria-expanded="false">
                  <h6 class="text-white">@Localizer[@link.Name]</h6>
                </a>
              </li>
            </AuthorizeView>
          }
          @if (link.Role == RolesEnum.BUUTAgent)
          {
            <AuthorizeView Roles="BUUTAgent">
              <li class="nav-item dropdown dropdown-hover mx-2">
                <a href="@link.Url" class="nav-link ps-2 d-flex justify-content-between cursor-pointer align-items-end"
                  role="button" aria-expanded="false">
                  <h6 class="text-white">@Localizer[@link.Name]</h6>
                </a>
              </li>
            </AuthorizeView>
          }
        }
        @foreach (var link in NavigationService.GetNavigationLinks().Where(link => !link.Authenticated))
        {
          <li class="nav-item dropdown dropdown-hover mx-2">
            <a href="@link.Url" class="nav-link ps-2 d-flex justify-content-between cursor-pointer align-items-end"
               role="button" aria-expanded="false">
              <h6 class="text-white">@Localizer[@link.Name]</h6>
            </a>
          </li>
        }
      </ul>

    </div>

    @if (showIcons)
    {
      <NavBarIcons></NavBarIcons>
          <button id="hamburger" @onclick="ToggleHamburger" class="navbar-toggler shadow-none ms-2" type="button" data-bs-toggle="collapse" data-bs-target="#navigation"
            aria-controls="navigation" aria-expanded="@isHamburgerOpen.ToString().ToLower()" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon mt-2">
              <span class="navbar-toggler-bar bar1"></span>
              <span class="navbar-toggler-bar bar2"></span>
              <span class="navbar-toggler-bar bar3"></span>
            </span>
          </button>
    }



  </div>
</nav>

@code {

  private bool showIcons = true;
  private bool isHamburgerOpen = false;
  private int windowWidth = 0;

  
  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    if (firstRender)
    {
          windowWidth = await js.InvokeAsync<int>("getWindowWidth");
          await js.InvokeVoidAsync("addResizeListener", DotNetObjectReference.Create(this));
    } 


  }
  [JSInvokable]
  public void OnWindowResize(int newWidth)
  {
    windowWidth = newWidth;
    
    if (windowWidth < 1005)
    {
      showIcons = !isHamburgerOpen; 
    }
    else
    {
      showIcons = true; 
    }

    StateHasChanged(); 
  }
  
  private async void ToggleHamburger()
  {
    isHamburgerOpen = !isHamburgerOpen;
    windowWidth = await js.InvokeAsync<int>("getWindowWidth");
    OnWindowResize(windowWidth);
  }
}
