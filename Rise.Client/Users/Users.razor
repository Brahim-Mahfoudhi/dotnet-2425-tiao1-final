@page "/users"
@using Microsoft.Extensions.Localization
@using Rise.Client.Components.Table
@using Rise.Shared.Users
@attribute [Authorize(Roles = "Admin")]
@inject IStringLocalizer<UserManagement> Localizer;

<PageTitle>@Localizer["Users"]</PageTitle>

<div class="text-white">
    <h1>@Localizer["Users"]</h1>

    <p>@Localizer["DemoFetch"]</p>

    <GenericTable Headers="Headers" Data="Data(users ?? Array.Empty<UserDto.UserBase>())" NoDataDisplay="@Localizer["NoUsers"]" IsLoading="_isLoading"/>


</div>

@code{
    
    [Parameter] public EventCallback<string> OnUserSelected { get; set; }
    private IEnumerable<UserDto.UserBase>? users;
  
    private bool _isLoading = false;
    
    [Inject] public required IUserService UserService { get; set; }
    [Inject] public required AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;
        users = await UserService.GetAllAsync();
        _isLoading = false;
    }

    private async Task HandleUserClick(string userId)
    {
        await OnUserSelected.InvokeAsync(userId);
    }

    private List<TableHeader> Headers => new List<TableHeader>
    {
        new (Localizer["User"]),
        new (Localizer["Role"]),
        new (Localizer["ID"], "text-center d-none d-md-table-cell"),
        new ("") // Empty header for action column
    };
    private List<List<RenderFragment>> Data(IEnumerable<UserDto.UserBase> users)
    {
        var rows = new List<List<RenderFragment>>();

        foreach (var user in users)
        {
            var row = new List<RenderFragment>
            {
                TableCellService.UserCell(user.FirstName, user.LastName, user.Email),
                TableCellService.ParagraphCell(user.Roles.Select(e =>Localizer[e.Name.ToString() ?? string.Empty] )),
                TableCellService.BadgeCell(user.Id),
                TableCellService.ActionCell(user.Id, this, HandleUserClick, null)
            };

            rows.Add(row);
        }

        return rows;
    }
   
}